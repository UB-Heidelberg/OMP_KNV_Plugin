### we prepend t_ to tablenames and f_ to fieldnames for disambiguity


########################################

db.define_table("press_settings",
     Field("press_id","integer"),
     Field("locale","string"),
     Field("setting_name","string"),
     Field("setting_value","string"),
     Field("setting_type","string"),
     migrate=False
)


db.define_table('t_onix_additionals',
    Field('submission_id', type='integer',readable=True,writable=False,default=request.args(0),
          label=T('Submission id')),
    Field('omp_publisher', 'string'),#TODO SELECT * FROM omptest.press_settings where publisher; 
    Field('omp_isbn','string',notnull=True,label=T('ISBN-13')),#TODO SELECT * FROM omptest.identification_codes where code = 15 ISBN hänge davon ab, welche publication_format_id; 
    Field('f_verlagsverkehrsnummer', type='integer', label=T('Verlagsverkehrsnummer'),writable=False),#TODO anja liefert daten als
    Field('f_zusatz_isbn_ean', type='string', notnull=False,   label=T('ISBN / EAN Weitere Ausgabe')),#TODO SELECT * FROM omptest.identification_codes where code = 15; lese value
    Field('f_verlags_bestell_nr', type='string', label=T('Verlags Bestell Nr.')),
    Field('omp_autor', type='string', label=T('Autoren')),#Sammelband: Herausgeber, Monographie Authoren
    Field('f_medienbeilage', type='string', label=T('Medienbeilage z.B "mit CD-ROM"'),default=""),
    Field('f_belletristik', type='string', label=T('Titel der Original Ausgabe')),
    Field('f_weitere_angaben', type='string', label=T('Weitere Angaben')),
    Field('f_produktionsjahr', type='string',
          label=T('Produktionsjahr')),
    Field('f_zusatzinformationen', type='string',
          label=T('Zusatzinformationen')),
    Field('f_teilband', type='string',
          label=T('Teilband')),
    Field('f_auflage', type='string', notnull=True,
          label=T('Auflage')),
    Field('f_laufzeit_in_minuten', type='string',
          label=T('Laufzeit In Minuten')),
    Field('f_umfang', type='string', notnull=True,
          label=T('Umfang')),
    Field('f_abbildungen', type='string',
          label=T('Abbildungen')),
    Field('f_verpackungs_angaben_in_mm', type='string',
          label=T('Verpackungsangaben In mm')),
    Field('f_fsk_or_usk_angabe', type='string', notnull=True,
          label=T('FSK / USK Angabe')),
    Field('f_altersempfehlung', type='string', notnull=True, default='',
          label=T('Altersempfehlung')),
    Field('f_warnhinweis', type='string', notnull=True,
          label=T('Warnhinweis')),
    Field('f_warengruppe_lt_vlb', type='string',
          label=T('Warengruppe lt. VLB')),
    Field('f_auslieferungstermin', type='string', notnull=True,
          label=T('Auslieferungstermin')),
    Field('f_ladenpreis_euro_de', type='double', notnull=True,
          label=T('Ladenpreis EURO DE')),
    Field('f_ladenpreis_euro_at', type='double', notnull=True,
          label=T('Ladenpreis EURO AT')),
    Field('f_mwst', type='double', notnull=True,
          label=T('Mwst.')),
    Field('f_vorbestelldatum', type='date',
          label=T('Vorbestelldatum')),
    Field('f_vorbestellpreis_euro_de', type='double', notnull=True,
          label=T('Vorbestellpreis EURO DE')),
    Field('f_vorbestellpreis_euro_at', type='double', notnull=True,
          label=T('Vorbestellpreis EURO AT')),
    Field('f_vorbestellpreis_euro_sfr', type='double', notnull=True,
          label=T('Vorbestellpreis EURO SFR')),
    Field('f_zolltarifnummer_verzeihnis', type='string', notnull=True,
          label=T('Zolltarifnummer Verzeihnis')),
    Field('f_warennummer_ztn', type='string', notnull=True,
          label=T('Warennummer Ztn')),
    Field('f_ursprungsland', type='string', notnull=True,
          label=T('Ursprungsland')),
    Field('f_cover_image', type='upload',
          label=T('Cover Image')),
    Field('f_klassifizierung_hochschulschriften', type='string', notnull=True,
          label=T('Klassifizierung Hochschulschriften')),
    Field('f_mehrbaendiger_werke', type='string', notnull=True,
          label=T('Mehrbaendiger Werke')),
    Field('f_issn', type='string', notnull=True,
          label=T('ISSN')),
    format='%(f_verlagsverkehrsnummer)s',
    migrate=settings.migrate
)

db.define_table("t_knv_metadata",
     Field('submission_id', type='integer',readable=True,writable=False,default=request.args(0),
          label=T('Submission id')),
     Field("isbn","integer", label=T('ISBN')),
     Field("buchtitel","string",label=T('Buchtitel')), # omp
     Field("anz_teile","integer", default=1,label=T('Anz. Teile')),
     Field("verlagsname","string", default=T("Heidelberg University Publishing"),label=T('Verlagsname'),writable=False),
     Field("gln","integer",label=T('GLN'), writable=False), #TODO anja liefert die daten von nv, ist eine fixe nr.
     Field("bindeart","string", label=T('Bindeart') ,default=T('Hardcover'),  requires=IS_IN_SET(('Hardcover','Softcover'))), 
     Field("anz_rillungen","integer",default=T('2'),label=T('Anz. Rillungen'), requires=IS_IN_SET(('2','4'))),
     Field("kapitalband","string",label=T('Kapitalband'), requires=IS_IN_SET(('ja','nein'))),
     Field("rueckenart","string",default="square",label=T('Rückenart')), #TODO anja liefert die datan
     Field("ansichtsexemplar","string", default="ja",label=T('Ansichtsexemplar'),requires=IS_IN_SET(('ja','nein'))),
     Field("laendercode","string",default="DE", label=T('Ländercode'),writable=False),
     Field("adresszeile1","string",default=" ",label=T('Adresszeile1')),
     Field("adresszeile2","string",default=T('Heidelberg University Publishing'),label=T('Adresszeile2'),writable=False),
     Field("adresszeile3","string",default=T('c/o Universitätsbibliothek Heidelberg'),label=T('Adresszeile3'),writable=False),
     Field("ort","string",default="Heidelberg",label=T('Ort'),writable=False),
     Field("plz","integer",default="69047",label=T('PLZ'), writable=False),
     Field("strasse_und_nr","string",default="Plöck 107-109",label=T('Straße und Nr.'),writable=False),
     Field("postfach","string",default="105749",label=T('Postfach'),writable=False),
     Field("speicherung","string",default="yes",label=T('Speicherung')),#TODO
     Field("dateiname_pdf_cover","upload",label=T('Dateiname PDF (cover)')),#TODO isbdn ohne bindestirche .cover.pdf automatisch generieren , ein neues feld
     Field("teilnummer","integer",label=T('Teilnummer')),#TODO
     Field("anzahl_seiten","integer",label=T('Anzahl Seiten')), #TODO
     Field("druckfarbe","string",label=T('Druckfarbe')), #TODO anja fragt nach
     Field("pruefung_trimbox","string",default="ja",label=T('Prüfung Trimbox')),
     Field("prueftoleranz","string",label=T('Prüftoleranz')), #TODO anja fragt nach
     Field("papiertyp","string",label=T('Papiertyp')),#TODO anja fragt nach
     Field("laminierungsart","string",default="gloss",label=T('Laminierungsart')),#TODO anja fragt nach
     Field("barcode_position","string",default='bottom right', label=T('Barcode Position'), requires=IS_IN_SET(('bottom right',"bottom-center","bottom-left","front-bottom-left","front-bottom-center","front bottom-right"))),
     Field("dateiname_pdf_innerwork_","upload",label=T('Dateiname PDF (innerwork)')),#TODO isbdn ohne bindestirche .innerwork.pdf automatisch generieren , ein neues feld
     Field("teilnummer","integer",default=1, label=T('Teilnummer')),
     Field("anzahl_seiten","integer",label=T('Anzahl Seiten')),
     Field("farbraum","string",label=T('Farbraum'),requires=IS_IN_SET(("graustufen","CYMK","RGB"))),
     Field("anzahl_farbseiten","integer",label=T('Anzahl Farbseiten')),
     Field("breite_der_trimbox","integer",label=T('Breite der Trimbox')),
     Field("hoehe_der_trimbox","integer",label=T('Höhe der Trimbox')),
     Field("pruefung_trimbox","string",label=T('Prüfung Trimbox'),requires=IS_IN_SET(("yes","no"))),
     Field("prueftoleranz","string",label=T('Prüftoleranz')),#TODO anja fragt nach
     Field("papiertyp","string",label=T('Papiertyp')),#TODO anja fragt nach
     Field("letzte_seite","string",default="yes",label=T('Letzte Seite')),
     migrate=settings.migrate
)


db.define_table("presses",
     Field("press_id","integer"),
     Field("path","string"),
     Field("seq","integer"),
     Field("primary_locale","string"),
     Field("enabled","integer"),
     primarykey=['press_id'],
     migrate = False
)

db.define_table("published_submissions",
     Field("pub_id","integer"),
     Field("submission_id","integer"),
     Field("date_published","datetime",requires=IS_DATETIME(format="%Y-%m-%d %H:%M:%S")),
     Field("audience","string"),
     Field("audience_range_qualifier","string"),
     Field("audience_range_from","string"),
     Field("audience_range_to","string"),
     Field("audience_range_exact","string"),
     Field("cover_image","string"),#TODO coverimage versoppelt
     primarykey=['pub_id'],
     migrate = False
)


db.define_table("publication_formats",
     Field("publication_format_id","integer"),
     Field("submission_id","integer"),
     Field("physical_format","integer"),
     Field("entry_key","string"),
     Field("seq","double"),
     Field("file_size","string"),
     Field("front_matter","string"),
     Field("back_matter","string"),
     Field("height","string"),
     Field("height_unit_code","string"),
     Field("width","string"),
     Field("width_unit_code","string"),
     Field("thickness","string"),
     Field("thickness_unit_code","string"),
     Field("weight","string"),
     Field("weight_unit_code","string"),
     Field("product_composition_code","string"),
     Field("product_form_detail_code","string"),
     Field("country_manufacture_code","string"),
     Field("imprint","string"),
     Field("product_availability_code","string"),
     Field("technical_protection_code","string"),
     Field("returnable_indicator_code","string"),
     Field("is_approved","integer"),
     Field("is_available","integer"),
     primarykey=['publication_format_id'],
     migrate = False
)

db.define_table("publication_format_settings",
     Field("publication_format_id","integer"),
     Field("locale","string"),
     Field("setting_name","string"),
     Field("setting_value","string"),
     Field("setting_type","string"),
     primarykey=['publication_format_id','locale','setting_name'],
     migrate = False
)

db.define_table("submissions",
     Field("submission_id","integer"),
     Field("locale","string"),
     Field("user_id","integer"),
     Field("context_id","integer"),
     Field("series_id","integer"),
     Field("series_position","string"),
     Field("edited_volume","integer"),
     Field("language","string"),
     Field("comments_to_ed","string"),
     Field("date_submitted","string"),
     Field("last_modified","datetime",requires=IS_DATETIME(format="%Y-%m-%d %H:%M:%S")),
     Field("date_status_modified","datetime",requires=IS_DATETIME(format="%Y-%m-%d %H:%M:%S")),
     Field("status","integer"),
     Field("submission_progress","integer"),
     Field("pages","string"),
     Field("fast_tracked","integer"),
     Field("hide_author","integer"),
     Field("comments_status","integer"),
     Field("stage_id","integer"),
     primarykey=['submission_id'],
     migrate = False
)

db.define_table("submission_settings",
     Field("submission_id","integer"),
     Field("locale","string"),
     Field("setting_name","string"),
     Field("setting_value","string"),
     Field("setting_type","string"),
     primarykey=['submission_id'],
     migrate = False
)
db.define_table("identification_codes",
     Field("identification_code_id","integer"),
     Field("publication_format_id","integer"),
     Field("code","integer"),
     Field("value","string"),
     migrate = False
)
